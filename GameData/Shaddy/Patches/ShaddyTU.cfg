// Config Author: JonnyOThan 

// https://github.com/Icecovery/Shaddy#available-shaders
KSP_SHADER_BUNDLE:NEEDS[TexturesUnlimited]
{
	name = Shaddy-Shaders
	universal = Shaddy/Assets/shaddy.shab
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent
	shader = Shaddy/Translucent
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Bumped)
	shader = Shaddy/Translucent (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Mapped)
	shader = Shaddy/Translucent (Mapped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Mapped) (Bumped)
	shader = Shaddy/Translucent (Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular
	shader = Shaddy/Translucent Specular
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular (Bumped)
	shader = Shaddy/Translucent Specular (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular (Mapped)
	shader = Shaddy/Translucent Specular (Mapped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular (Mapped) (Bumped)
	shader = Shaddy/Translucent Specular (Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular (Spec Mapped) (Bumped)
	shader = Shaddy/Translucent Specular (Spec Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Specular (All Mapped) (Bumped)
	shader = Shaddy/Translucent Specular (All Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Cutoff
	shader = Shaddy/Translucent Cutoff
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Cutoff (Bumped)
	shader = Shaddy/Translucent Cutoff (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Cutoff (Mapped)
	shader = Shaddy/Translucent Cutoff (Mapped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent Cutoff (Mapped) (Bumped)
	shader = Shaddy/Translucent Cutoff (Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Monocolor)
	shader = Shaddy/Translucent (Monocolor)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Monocolor)
	shader = Shaddy/Translucent (Monocolor) (Clip Out)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/Translucent (Monocolor)
	shader = Shaddy/Translucent (Monocolor) (Fade In)
}

TRANSPARENT_SHADER:NEEDS[TexturesUnlimited] // this sets the renderqueue order to transparent.
{
	name = Shaddy/Translucent (Monocolor) (Fade In)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent
	shader = Shaddy/BackCull/Translucent
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent (Bumped)
	shader = Shaddy/BackCull/Translucent (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent (Mapped)
	shader = Shaddy/BackCull/Translucent (Mapped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent (Mapped) (Bumped)
	shader = Shaddy/BackCull/Translucent (Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular
	shader = Shaddy/BackCull/Translucent Specular
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular (Bumped)
	shader = Shaddy/BackCull/Translucent Specular (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular (Mapped)
	shader = Shaddy/BackCull/Translucent Specular (Mapped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular (Mapped) (Bumped)
	shader = Shaddy/BackCull/Translucent Specular (Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular (Spec Mapped) (Bumped)
	shader = Shaddy/BackCull/Translucent Specular (Spec Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent Specular (All Mapped) (Bumped)
	shader = Shaddy/BackCull/Translucent Specular (All Mapped) (Bumped)
}

KSP_SHADER_DATA:NEEDS[TexturesUnlimited]
{
	name = Shaddy/BackCull/Translucent (Monocolor)
	shader = Shaddy/BackCull/Translucent (Monocolor)
}